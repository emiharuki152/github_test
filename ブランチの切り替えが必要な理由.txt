ブランチを作って切り替えてコミットするのと、切り替えずにコミットするのの違い
1. ブランチを切り替えずにコミットすると？
「今いるブランチ」に変更がそのまま追加される

例えば main ブランチのままでコミットすると、main が直接更新される

つまり作業内容がそのままメインの履歴に残る

2. 新しいブランチを作って切り替え、そこでコミットすると？
新しく作った別のブランチにだけ変更が記録される

main は変更前のまま（クリーンな状態）を保てる

そのブランチで機能追加や修正を進められる

完成したら、そのブランチを main にマージ（統合）する流れになる

なぜブランチを使うのか？
安全に複数の作業を同時進行できるから

例えば

main は安定したリリース状態を保つ

feature/login ブランチでログイン機能を開発

feature/ui ブランチでUI改善を進める

それぞれの作業が干渉せず、完成後に問題なければまとめて統合できる

図でイメージすると

main
  ├─A──B──C  (mainのコミット)
        \
         ├─D──E  (featureブランチのコミット)
DとEはfeatureブランチだけの変更

mainはCまでの状態で安定

まとめ
操作	影響範囲	使いどころ
ブランチ切り替えなしでコミット	今のブランチ（多くはmain）に直接変更が積み重なる	小規模・単独作業時、または緊急修正
新しいブランチでコミット	作業内容は新ブランチの履歴だけに反映される	複数人作業や大きな機能追加、テスト時に最適